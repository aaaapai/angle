name: ANGLE

on:
  workflow_dispatch:

jobs:
  build:
    permissions:
      id-token: write
      contents: read
    strategy:
      matrix:
        arch: ["arm64"]
      fail-fast: false

    name: "Build for Android ${{matrix.arch}}"
    runs-on: ubuntu-latest

    steps:

      - name: Setup CCache
        uses: Chocobo1/setup-ccache-action@master
        with:
          ccache_options: |
            compression=false
          
      - name: Cache depot_tools and dependencies
        uses: actions/cache@main
        with:
          path: |
            depot_tools
            third_party
            .cipd
            .gclient
          key: ${{ runner.os }}-angle-deps-${{ hashFiles('angle/DEPS') }}

      - name: Checkout
        uses: actions/checkout@main
        with:
           fetch-depth: 1
          
      - name: Setup depot_tools
        if: steps.cache-deps.outputs.cache-hit != 'true'
        shell: bash
        run: |
          git clone --depth 1 https://chromium.googlesource.com/chromium/tools/depot_tools.git
          echo "DEPOT_TOOLS_COMMIT=$(git -C depot_tools rev-parse HEAD)" >> $GITHUB_ENV
          export PATH=`pwd`/depot_tools:$PATH
          echo $PATH
          vpython3 scripts/bootstrap.py

      - name: Run gclient sync
        shell: bash
        run:  |
           echo "DEPOT_TOOLS_COMMIT=$(git -C depot_tools rev-parse HEAD)" >> $GITHUB_ENV
           export PATH=`pwd`/depot_tools:$PATH
           echo $PATH
           gclient sync --no-history --shallow --reset --force
        
      - name: Build ANGLE
        shell: bash
        run: |
          echo "DEPOT_TOOLS_COMMIT=$(git -C depot_tools rev-parse HEAD)" >> $GITHUB_ENV
          export PATH=`pwd`/depot_tools:$PATH
          echo $PATH
          sudo rm -rf build/linux/debian_bullseye_i386-sysroot
          sudo rm -rf build/linux/debian_bullseye_amd64-sysroot
          sudo rm -rf /usr/local/share/chromedriver-linux64
          sudo rm -rf /usr/local/share/gecko_driver
          sudo rm -rf /usr/share/java/selenium-server.jar
          sudo rm -rf ${JAVA_HOME_8_X64}
          sudo rm -rf ${JAVA_HOME_11_X64}
          sudo rm -rf ${JAVA_HOME_17_X64}
          sudo rm -rf ${JAVA_HOME_21_X64}
          gn gen out/Android-${{matrix.arch}} --threads=$(nproc)
          gn args out/Android-${{ matrix.arch }} --list --short
          autoninja -C out/Android-${{matrix.arch}} -j $(nproc)

      - name: Dump logs on failure
        if: failure()
        shell: bash
        run: |
          find out/Android-${{matrix.arch}} -name "siso_output" -exec cat {} \;
          chmod +x ./out/Android-arm64/siso_failed_commands.sh
          ./out/Android-arm64/siso_failed_commands.sh

      - name: Upload artifacts
        uses: actions/upload-artifact@main
        with:
          name: angle-${{matrix.arch}}-${{ github.run_number }}
          path: out/Android-${{matrix.arch}}/*.so
